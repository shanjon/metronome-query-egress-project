import csv
from datetime import datetime, date
import re

# parse properties string into a dictionary
def parse_properties(prop_string):
    # use regex to extract key-value pairs from the properties string
    pairs = re.findall(r'(\w+)=([^,}]+)', prop_string)
    return dict(pairs)

# count images by size
def count_images_by_size(filename):
    # Define the date range for filtering
    start_date = date(2024, 3, 10)
    end_date = date(2024, 3, 25)
    
    # dictionary to store image counts for each size
    image_counts = {
        "256×256": 0,
        "512×512": 0,
        "1024x1024": 0
    }

    # open / read  file
    with open(filename, 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            # parse event date from the timestamp
            event_date = datetime.strptime(row['timestamp'].split()[0], '%Y-%m-%d').date()
            
            # check if event is within the date range and is an image_modeler event
            if start_date <= event_date <= end_date and row['event_type'] == 'image_modeler':
                # parse properties string
                properties = parse_properties(row['properties'])
                
                # extract image size and number of images
                image_size = properties['image_size']
                num_images = int(properties['num_images'])
                
                # add to the count based on soze
                if image_size in image_counts:
                    image_counts[image_size] += num_images

    return image_counts

# main execution block
if __name__ == "__main__":
    # execute function against file
    result = count_images_by_size('sample-egress-data/events.csv')

    # print results
    print("Images generated by size between March 10th and March 25th, 2024:")
    for size, count in result.items():
        print(f"{size}: {count}")